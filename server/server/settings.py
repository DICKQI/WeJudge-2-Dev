"""
Django settings for server project.

Generated by 'django-admin startproject' using Django 1.10.

For more information on this file, see
https://docs.djangoproject.com/en/1.10/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.10/ref/settings/
"""

import os
import djcelery
from kombu import Queue, Exchange

#
#
# # test
# from django import urls as URLS
# old_reverse = URLS.reverse
#
# def reverse_subdomain(*args, **kwargs):
#     path_info = old_reverse(*args, **kwargs)
#     return path_info.replace("/contest/", "https://bnuz.edu.wejudge.net/")
#
#
# URLS.reverse = reverse_subdomain


djcelery.setup_loader()

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.10/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'w#05npmp_lgnq@m+inx=gc(s%#$sd_xt$dyzfgml&^b=h42cb)'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'apps.wejudge',
    'apps.account',
    'apps.problem',
    'apps.education',
    'apps.contest',
    'apps.oauth2',
    'djcelery',
    'xadmin',
    'crispy_forms',
]


BROKER_URL = 'amqp://wejudge:bnuzoj5090@localhost:5672/WeJudge'
CELERY_RESULT_BACKEND = "amqp"
CELERY_TASK_RESULT_EXPIRES = 300   # celery任务执行结果的超时时间，我的任务都不需要返回结果,只需要正确执行就行
CELERYD_TASK_TIME_LIMIT = 120       # 超时时间
CELERYD_CONCURRENCY = 20            # celery worker的并发数 也是命令行-c指定的数目,事实上实践发现并不是worker也多越好,保证任务不堆积,加上一定新增任务的预留就可以
CELERYD_PREFETCH_MULTIPLIER = 4     # celery worker 每次去rabbitmq取任务的数量，我这里预取了4个慢慢执行,因为任务有长有短没有预取太多
CELERYD_MAX_TASKS_PER_CHILD = 40    # 每个worker执行了多少任务就会死掉，我建议数量可以大一些，比如200
CELERYD_FORCE_EXECV = True
CELERYBEAT_SCHEDULER = 'djcelery.schedulers.DatabaseScheduler'      # 这是使用了django-celery默认的数据库调度模型,任务执行周期都被存在你指定的orm数据库中
CELERY_ACCEPT_CONTENT = ['application/json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
CELERY_TIMEZONE = 'Africa/Nairobi'

MASTER_SERVER_URL = "http://127.0.0.1"

CELERY_IMPORTS = (
    'apps.problem.libs.workers', 'apps.education.libs.workers',
    'apps.contest.libs.workers'
)

CELERY_QUEUES = (
    Queue('default', Exchange('default'), routing_key='default'),
    Queue('judge_queue', Exchange('judge_queue'), routing_key='judge_queue'),
    Queue('wejudge_worker', Exchange('wejudge_worker'), routing_key='wejudge_worker'),
)
CELERY_ROUTES = {
    'apps.problem.libs.workers.judge': {'queue': 'judge_queue', 'routing_key': 'judge_queue'},
    'apps.problem.libs.workers.tcmaker': {'queue': 'judge_queue', 'routing_key': 'judge_queue'},
    'apps.education.libs.workers.asgn_judge': {'queue': 'judge_queue', 'routing_key': 'judge_queue'},
    'apps.contest.libs.workers.contest_judge': {'queue': 'judge_queue', 'routing_key': 'judge_queue'},
    'apps.contest.libs.workers.cross_check': {'queue': 'wejudge_worker', 'routing_key': 'wejudge_worker'},
    'apps.contest.libs.workers.contest_refresh_all_data': {'queue': 'wejudge_worker', 'routing_key': 'wejudge_worker'},
    'apps.contest.libs.workers.contest_ranklist_snapshot': {'queue': 'wejudge_worker', 'routing_key': 'wejudge_worker'},
    'apps.education.libs.workers.refresh_asgn_datas': {'queue': 'wejudge_worker', 'routing_key': 'wejudge_worker'},
}


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'wejudge.middleware.WeJudgeMiddleware',
    # 'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

]

ROOT_URLCONF = 'server.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'wejudge.core.context.WejudgeContext',
            ],
        },
    },
]


WSGI_APPLICATION = 'server.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.10/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'OPTIONS': {
            'read_default_file': 'config/mysql.conf',
        }
    }
}
#
# LOGGING = {
#     'version': 1,
#     'disable_existing_loggers': True,
#     'filters': {
#         'require_debug_true': {
#             '()': 'django.utils.log.RequireDebugTrue',
#         },
#     },
#     'formatters': {
#         'standard': {
#             'format': '[%(asctime)s %(pathname)s %(funcName)s]\nLine %(levelname)s %(lineno)d: %(message)s\n'
#         },
#     },
#     'handlers': {
#         'file_handler': {
#              'level': 'INFO',
#              'class': 'logging.handlers.TimedRotatingFileHandler',
#              'filename': '/wejudge/log/django.log',
#              'formatter': 'standard'
#         },
#         'console': {
#             'level': 'INFO',
#             'filters': ['require_debug_true'],
#             'class': 'logging.StreamHandler',
#             'formatter': 'standard'
#         },
#     },
#     'loggers': {
#         'django': {
#             'handlers': ['file_handler', 'console'],
#             'level': 'DEBUG',
#             'propagate': True
#         },
#     }
# }

# Password validation
# https://docs.djangoproject.com/en/1.10/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.10/topics/i18n/

LANGUAGE_CODE = 'zh-Hans'

TIME_ZONE = 'Asia/Shanghai'

USE_TZ = False

# TIME ZONE http://blog.csdn.net/win_turn/article/details/53000770

USE_I18N = True

USE_L10N = True

SESSION_ENGINE = 'redis_sessions.session'
SESSION_REDIS_HOST = '127.0.0.1'
SESSION_REDIS_PORT = 6379
SESSION_REDIS_DB = 0
# SESSION_REDIS_PASSWORD = None
SESSION_REDIS_PREFIX = 'wejudge_session'

SESSION_COOKIE_AGE = 86400

SESSION_EXPIRE_AT_BROWSER_CLOSE = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.10/howto/static-files/

STATIC_URL = '/static/'
